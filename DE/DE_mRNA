library(limma)
library(matrixStats)
library(splines)

############# with repeats
read.csv("~/Documents/Chondrogenesis/Normalised//mRNA_normalised.csv", row.names = 1) -> X
X[- grep("HS.", rownames(X)),] -> X1
X1[- grep("LOC", rownames(X1)),] -> X2
X2[- grep("FLJ", rownames(X2)),] -> X3
X3 -> X

lev <- c(rep(c("D0", "D14"), each =3), "D0", "D1", "D3", "D6", "D10", "D14")
U <- unique(lev)
f <- factor(lev, U)
model.matrix(~0+f) -> MM
rownames(MM) <- colnames(X)
colnames(MM) <- U
fit <- lmFit(X, MM)

T01 <- makeContrasts(D1=(D1-D0),
                     levels = MM)
T01_F <- contrasts.fit(fit, T01)
T01_E <- eBayes(T01_F)
T01_R <- topTable(T01_E, adjust.method = "BH", n=Inf)

T03 <- makeContrasts(D3=(D3-D0),
                     levels = MM)
T03_F <- contrasts.fit(fit, T03)
T03_E <- eBayes(T03_F)
T03_R <- topTable(T03_E, adjust.method = "BH", n=Inf)

T06 <- makeContrasts(D6=(D6-D0),
                     levels = MM)
T06_F <- contrasts.fit(fit, T06)
T06_E <- eBayes(T06_F)
T06_R <- topTable(T06_E, adjust.method = "BH", n=Inf)

T010 <- makeContrasts(D10=(D10-D0),
                     levels = MM)
T010_F <- contrasts.fit(fit, T010)
T010_E <- eBayes(T010_F)
T010_R <- topTable(T010_E, adjust.method = "BH", n=Inf)

T014 <- makeContrasts(D14=(D14-D0),
                      levels = MM)
T014_F <- contrasts.fit(fit, T014)
T014_E <- eBayes(T014_F)
T014_R <- topTable(T014_E, adjust.method = "BH", n=Inf)

T01_R[which(T01_R$adj.P.Val < 0.05),] -> P1
T03_R[which(T03_R$adj.P.Val < 0.05),] -> P3
T06_R[which(T06_R$adj.P.Val < 0.05),] -> P6
T010_R[which(T010_R$adj.P.Val < 0.05),] -> P10
T014_R[which(T014_R$adj.P.Val < 0.05),] -> P14

P1$newcol <- rownames(P1)
P3$newcol <- rownames(P3)
P6$newcol <- rownames(P6)
P10$newcol <- rownames(P10)
P14$newcol <- rownames(P14)

rbind(P1, P3, P6, P10, P14)-> Ps
Ps[! duplicated(Ps$newcol),] -> Us

T01_R[which(rownames(T01_R) %in% rownames(Us) == T),] -> S1
T03_R[which(rownames(T03_R) %in% rownames(Us) == T),] -> S3
T06_R[which(rownames(T06_R) %in% rownames(Us) == T),] -> S6
T010_R[which(rownames(T010_R) %in% rownames(Us) == T),] -> S10
T014_R[which(rownames(T014_R) %in% rownames(Us) == T),] -> S14

O1 <- S1[order(rownames(S1)),]
O3 <- S3[order(rownames(S3)),]
O6 <- S6[order(rownames(S6)),]
O10 <-S10[order(rownames(S10)),]
O14 <- S14[order(rownames(S14)),]

colnames(O1)[1] <- "D1.log2fc"
colnames(O3)[1] <- "D3.log2fc"
colnames(O6)[1] <- "D6.log2fc"
colnames(O10)[1] <- "D10.log2fc"
colnames(O14)[1] <- "D14.log2fc"

colnames(O1)[2] <- "D1.AveExp"
colnames(O3)[2] <- "D3.AveExp"
colnames(O6)[2] <- "D6.AveExp"
colnames(O10)[2] <- "D10.AveExp"
colnames(O14)[2] <- "D14.AveExp"

colnames(O1)[5] <- "D1.adjPval"
colnames(O3)[5] <- "D3.adjPval"
colnames(O6)[5] <- "D6.adjPval"
colnames(O10)[5] <- "D10.adjPval"
colnames(O14)[5] <- "D14.adjPval"

cbind(O1, O3, O6, O10, O14) -> L
X -> mRNA
colnames(L)
L[,-c(2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 24, 26, 27, 28, 30)] -> lx
colnames(lx)
colnames(mRNA)
mRNA <- mRNA[order(rownames(mRNA)),]
mRNA[which(rownames(mRNA) %in% rownames(lx) == TRUE),] -> tmRNA
omRNA <- tmRNA[order(rownames(tmRNA)),]
lx$D1.AveExp <- rowMeans(omRNA[8])
lx$D3.AveExp <- rowMeans(omRNA[9])
lx$D6.AveExp <- rowMeans(omRNA[10])
lx$D10.AveExp <- rowMeans(omRNA[11])
lx$D14.AveExp <- rowMeans(omRNA[c(4:6, 12)])

setwd("~/Documents/Chondrogenesis/DE/")

write.table(lx, "mRNA_diffExp_data.txt", quote = F, sep = "\t")
#############processed SDEG data
X[which(rownames(X) %in% rownames(lo) == T),] -> xo
write.table(xo, "SDEG_processed_mRNA.txt", quote = F, sep = "\t")
xo[,c(7:12)] -> xx 
write.table(xx, "SDEG_proc_tc_mRNA.txt", quote = F, sep = "\t")
############non-seperated
fit2 <- makeContrasts(
                      T1_T0=T1-T0,
                      T2_T0=T2-T0,
                      T3_T0=T3-T0,
                      T4_T0=T4-T0,
                      T5_T0=T5-T0, levels = MM)
ff <- contrasts.fit(fit, fit2)
ef <- eBayes(ff)
topTableF(ef,adjust.method = "BH", n=Inf) -> DF

DF[which(DF$adj.P.Val <0.05),] -> stoch
#write.csv(stoch, "~/Documents/Barter data/Chondrocytes/DE_results.csv")
stoch[rowSums(stoch[1:5] >1) >= 1,] -> high
stoch[rowSums(stoch[1:5] < -1) >= 1,] -> low
as.data.frame(rbind(high, low)) -> dlist

D[which(rownames(D) %in% rownames(dlist) == T),] -> k
write.csv(k, "~/Documents/Barter data/Chondrocytes/sig_genes.csv")
dlist[which(rownames(dlist) %in% rownames(D) == T),] -> j
setwd("~/Documents/micromb/")
write.csv(j,"mRNA_DE.csv")
write.csv(k, "mRNA_sigG.csv")

k[7:12] -> tc
write.csv(tc, "~/Documents/Barter data/analysis/DE/SDElistofmRNAs.csv")
